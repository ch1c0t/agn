// Generated by CoffeeScript 2.5.1
(function() {
  var Api, Fns, Generator, Validate, createFnFiles, createMainFile, fs;

  fs = require('fs');

  ({Generator} = require('./generator'));

  ({Validate} = require('./validator'));

  ({createMainFile} = require('./server/main'));

  ({Fns, createFnFiles} = require('./server/functions'));

  Api = function() {
    var functions, types;
    ({functions, types} = this);
    this.createIfs = Validate(types);
    this.whenCases = (Object.keys(functions)).map(function(fn) {
      var body, pre;
      pre = `when '${fn}'`;
      body = functions[fn].in ? `  await require('./functions/${fn}.js')(message.in)` : `  await require('./functions/${fn}.js')()`;
      return `${pre}\n${body}`;
    }).join("\n");
    return this;
  };

  exports.Server = Generator({
    init: {
      name: function() {
        return this;
      },
      api: Api,
      functions: Fns
    },
    once: function() {
      var ref;
      this.PackageSource = ((ref = this.api.server) != null ? ref.dependencies : void 0) ? JSON.stringify({
        name: `${this.name}.server`,
        dependencies: this.api.server.dependencies
      }) : JSON.stringify({
        name: `${this.name}.server`
      });
      this.createPackageFile = function() {
        return fs.writeFileSync(`${this.dir}/package.json`, this.PackageSource);
      };
      createMainFile.call(this);
      return createFnFiles.call(this);
    },
    call: function(dir) {
      this.inside(dir, function() {
        this.createPackageFile();
        this.createMainFile();
        return this.createFnFiles();
      });
      return console.log(`Building the server at ${dir}.`);
    }
  });

}).call(this);
